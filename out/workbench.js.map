{"version":3,"file":"workbench.js","sources":["../src/workbench/keys.ts","../src/workbench/shared.ts","../src/workbench/lifecycle.ts","../src/workbench/syntax.ts","../src/workbench/utils.ts","../src/workbench/highlight.ts","../src/workbench/index.ts"],"sourcesContent":["export const extensionId = 'kauderk.concise-syntax'\r\nexport const windowId = 'window.' + extensionId\r\n// exploit the fact that vscode renders data to the dom, could be any other attribute\r\nexport const bridgeBetweenVscodeExtension = 'aria-label'\r\nexport const customCSS = `\r\n\t.view-lines {\r\n\t\t--r: transparent;\r\n\t}\r\n\t.view-lines:has(.dummy:hover) {\r\n\t\t--r: red;\r\n\t}\r\n\t.dummy {\r\n\t\tcolor: var(--r);\r\n\t}\r\n\t`\r\n\r\nexport const editorSelector = '.editor-instance'\r\nexport const idSelector = '[data-mode-id=\"typescriptreact\"]'\r\nexport const linesSelector =\r\n  idSelector + ` .view-lines.monaco-mouse-cursor-text`\r\nexport const overlaySelector = '.view-overlays'\r\nexport const highlightSelector = idSelector + ` ` + overlaySelector\r\nexport const selectedSelector = '.selected-text'\r\nexport const currentSelector = '.current-line'\r\nexport const languages = ['typescriptreact', 'javascriptreact']\r\n","import { windowId } from './keys'\r\n\r\nexport const stylesContainer =\r\n  document.getElementById(windowId) ?? document.createElement('div')\r\nstylesContainer.id = windowId\r\ndocument.body.appendChild(stylesContainer)\r\n\r\nexport function createStyles(name: string) {\r\n  const id = windowId + '.' + name\r\n  const style =\r\n    stylesContainer.querySelector(`[id=\"${id}\"]`) ??\r\n    document.createElement('style')\r\n  style.id = id\r\n  stylesContainer.appendChild(style)\r\n\r\n  return {\r\n    element: style,\r\n    styleIt: (text: string) => styleIt(style, text),\r\n    dispose() {\r\n      style.textContent = ''\r\n    },\r\n  }\r\n}\r\n\r\nexport function styleIt(style: Element, text: string) {\r\n  return (style.textContent = text\r\n    .replace(/\\r|\\n/g, '')\r\n    .replaceAll(/\\t+/g, '\\n'))\r\n}\r\n\r\nexport type MutationOptions = {\r\n  added(node: Node): void\r\n  removed(node: Node): void\r\n  options: MutationObserverInit\r\n  target(): HTMLElement\r\n}\r\nexport function createMutation(props: MutationOptions) {\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      mutation.addedNodes.forEach(props.added)\r\n      mutation.removedNodes.forEach(props.removed)\r\n    }\r\n  })\r\n\r\n  return {\r\n    observe() {\r\n      // const target = props.target()\r\n      // props.added(target)\r\n      observer.observe(props.target(), props.options)\r\n    },\r\n    disconnect() {\r\n      // props.removed(props.target())\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\ntype MatchMutationOptions = {\r\n  added(node: HTMLElement): void\r\n  removed(node: HTMLElement): void\r\n  // filter(node: Node): boolean\r\n  options: MutationObserverInit\r\n  target(): HTMLElement\r\n}\r\n\r\nexport function specialChildrenMutation(props: MatchMutationOptions) {\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      for (const node of mutation.addedNodes) {\r\n        // if (props.filter(node)) {\r\n        props.added(node as any)\r\n        // }\r\n      }\r\n      for (const node of mutation.removedNodes) {\r\n        // if (props.filter(node)) {\r\n        props.removed(node as any)\r\n        // }\r\n      }\r\n    }\r\n  })\r\n\r\n  return {\r\n    stop() {\r\n      observer.takeRecords()\r\n      observer.disconnect()\r\n    },\r\n    plug(mapChildren?: (children: NodeListOf<ChildNode>) => ChildNode[]) {\r\n      const target = props.target()\r\n\r\n      ;(mapChildren?.(target.childNodes) ?? target.childNodes).forEach(\r\n        props.added as any\r\n      )\r\n      observer.observe(target, props.options)\r\n    },\r\n    unplug() {\r\n      const target = props.target()\r\n\r\n      target.childNodes.forEach(props.removed as any)\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\n\r\nexport function createStackedMutation<T>(options: {\r\n  added(node: Node): void\r\n  removed(node: Node): void\r\n  options: MutationObserverInit\r\n}) {\r\n  function add(node: Node) {\r\n    options.added(node)\r\n  }\r\n  function remove(node: Node) {\r\n    options.removed(node)\r\n  }\r\n\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      mutation.addedNodes.forEach(add)\r\n      mutation.removedNodes.forEach(remove)\r\n    })\r\n  })\r\n\r\n  return {\r\n    track(target: HTMLElement) {\r\n      add(target)\r\n      observer.observe(target, options.options)\r\n    },\r\n    untrack(target: HTMLElement) {\r\n      remove(target)\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\n\r\ntype D = string | undefined\r\n\r\nexport function createAttributeArrayMutation(props: {\r\n  watchAttribute: string[]\r\n  children?: boolean\r\n  change: (newAttributes: D[], oldAttributes: D[], node: HTMLElement) => void\r\n  target(): HTMLElement\r\n}) {\r\n  let previousData: D[] = []\r\n  const bridgeAttribute = (target: any): D[] =>\r\n    props.watchAttribute.map((a) => target?.getAttribute?.(a))\r\n\r\n  function change(target: HTMLElement) {\r\n    const newData = bridgeAttribute(target)\r\n    if (newData.every((d, i) => d === previousData[i])) return\r\n    const oldAttributes = [...previousData]\r\n    previousData = newData\r\n\r\n    props.change(newData, oldAttributes, target)\r\n  }\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      change(mutation.target as HTMLElement)\r\n    }\r\n  })\r\n  const options = {\r\n    attributes: true,\r\n    subtree: props.children,\r\n    // childList: props.children,\r\n    attributeFilter: props.watchAttribute,\r\n  }\r\n  return {\r\n    plug() {\r\n      const target = props.target()\r\n      change(target)\r\n      observer.observe(target, options)\r\n    },\r\n    stop() {\r\n      observer.takeRecords()\r\n      observer.disconnect()\r\n    },\r\n    disconnect() {\r\n      // change(props.target())\r\n\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\n\r\n// TODO: test if this is more \"performant\" or just mental gymnastics\r\nexport function watchForRemoval(targetElement: Element, callback: Function) {\r\n  let done = false\r\n  let stack: Node[] = []\r\n  const rootObserver = new MutationObserver((mutationsList) => {\r\n    mutationsList.forEach((mutation) => {\r\n      if (\r\n        done ||\r\n        !stack.includes(mutation.target) ||\r\n        !mutation.removedNodes.length\r\n      )\r\n        return\r\n\r\n      const nodes = Array.from(mutation.removedNodes)\r\n      // console.log(mutation.target)\r\n\r\n      // direct match\r\n      if (\r\n        nodes.indexOf(targetElement) > -1 ||\r\n        // parent match\r\n        nodes.some((parent) => parent.contains(targetElement))\r\n      ) {\r\n        console.log('removed', targetElement, stack)\r\n        dispose()\r\n        callback()\r\n        return\r\n      }\r\n    })\r\n  })\r\n\r\n  function REC_ObserverAncestors(element: Element) {\r\n    if (!element.parentElement || element.parentElement === document.body) {\r\n      return\r\n    }\r\n    stack.push(element.parentElement)\r\n    rootObserver.observe(element.parentElement, { childList: true })\r\n    REC_ObserverAncestors(element.parentElement)\r\n  }\r\n\r\n  // Start observing ancestor hierarchy\r\n  REC_ObserverAncestors(targetElement)\r\n\r\n  function dispose() {\r\n    done = true\r\n    stack = []\r\n    rootObserver.takeRecords()\r\n    rootObserver.disconnect()\r\n  }\r\n  return dispose\r\n}\r\n// export function watchForAddition(targetElement: Element, callback: Function, thresholdScopedSelector:string) {\r\n// \tlet done = false\r\n// \tlet stack: Node[] = []\r\n// \tconst rootObserver = new MutationObserver((mutationsList) => {\r\n// \t\tmutationsList.forEach((mutation) => {\r\n// \t\t\tif (\r\n// \t\t\t\tdone ||\r\n// \t\t\t\t!stack.includes(mutation.target) ||\r\n// \t\t\t\t!mutation.addedNodes.length\r\n// \t\t\t)\r\n// \t\t\t\treturn\r\n\r\n// \t\t\tconst nodes = Array.from(mutation.addedNodes)\r\n// \t\t\t// console.log(mutation.target)\r\n\r\n// \t\t\t// direct match\r\n// \t\t\tif (\r\n// \t\t\t\tnodes.indexOf(targetElement) > -1 ||\r\n// \t\t\t\t// parent match\r\n// \t\t\t\tnodes.some((parent) => parent.contains(targetElement))\r\n// \t\t\t) {\r\n// \t\t\t\tconsole.log('added', targetElement, stack)\r\n// \t\t\t\tdispose()\r\n// \t\t\t\tcallback()\r\n// \t\t\t\treturn\r\n// \t\t\t}\r\n// \t\t})\r\n// \t})\r\n\r\n// \tfunction REC_ObserverDescendants(element: Element) {\r\n// \t\tif (!element.firstChild || element.firstChild === document.body) {\r\n// \t\t\treturn\r\n// \t\t}\r\n// \t\tstack.push(element.parentElement)\r\n// \t\trootObserver.observe(element.parentElement, { childList: true })\r\n// \t\tREC_ObserverDescendants(element.parentElement)\r\n// \t}\r\n// \t// Start observing ancestor hierarchy\r\n// \tREC_ObserverDescendants(targetElement)\r\n\r\n// \tfunction dispose() {\r\n// \t\tdone = true\r\n// \t\tstack = []\r\n// \t\trootObserver.takeRecords()\r\n// \t\trootObserver.disconnect()\r\n// \t}\r\n// \treturn dispose\r\n// }\r\n","import { watchForRemoval } from './shared'\r\n\r\nexport type LifecycleProps<T> = {\r\n  activate(dom: T): void | (() => void)\r\n  dom(): T & { check(): boolean; watchForRemoval: HTMLElement }\r\n  dispose?: () => void\r\n}\r\n\r\n/**\r\n * @description The **activate** function is called when the dom **check** passes. Then if the **item** is removed from the dom, the **dispose** function is called.\r\n *\r\n * Then it will try to **reload** the lifecycle.\r\n */\r\nexport function lifecycle<T>(props: LifecycleProps<T>) {\r\n  let running = false\r\n  let anyUsage = false\r\n  let interval: NodeJS.Timeout\r\n  let disposeObserver: Function | void\r\n  let disposeActivate: Function | void\r\n\r\n  function patch() {\r\n    const dom = props.dom()\r\n    if (running || !dom.check()) return\r\n    anyUsage = true\r\n    running = true\r\n    clearInterval(interval)\r\n    disposeObserver = watchForRemoval(dom.watchForRemoval, reload)\r\n    disposeActivate = props.activate(dom)\r\n  }\r\n  function dispose() {\r\n    disposeActivate?.()\r\n    disposeActivate = undefined\r\n    disposeObserver?.()\r\n    disposeObserver = undefined\r\n\r\n    props.dispose?.()\r\n    running = false\r\n    clearInterval(interval)\r\n  }\r\n  function reload() {\r\n    dispose()\r\n    interval = setInterval(patch, 5000)\r\n  }\r\n\r\n  let exhaust: any\r\n\r\n  return {\r\n    activate() {\r\n      reload()\r\n      return\r\n      exhaust = setTimeout(() => {\r\n        clearTimeout(exhaust)\r\n        if (!anyUsage) {\r\n          clearInterval(interval)\r\n        }\r\n      }, 1000 * 60 * 2)\r\n    },\r\n    dispose() {\r\n      dispose()\r\n      clearTimeout(exhaust)\r\n      clearInterval(interval)\r\n    },\r\n  }\r\n}\r\n","import { bridgeBetweenVscodeExtension, extensionId } from './keys'\r\nimport { lifecycle } from './lifecycle'\r\nimport { regexToDomToCss } from './regexToDomToCss'\r\nimport { createAttributeArrayMutation, createStyles } from './shared'\r\n\r\nfunction domExtension() {\r\n  const statusBar = document.querySelector('.right-items') as HTMLElement\r\n  const item = statusBar?.querySelector(`[id=\"${extensionId}\"]`) as HTMLElement\r\n  const icon = item?.querySelector('.codicon') as HTMLElement\r\n  return { icon, item, statusBar }\r\n}\r\nconst bridgeAttribute = (target: any) =>\r\n  // You could pass stringified data\r\n  !target.getAttribute?.(bridgeBetweenVscodeExtension)?.includes('inactive')\r\n\r\n/**\r\n * @description When the vscode extension changes the \"bridge attribute\" apply custom styles\r\n *\r\n * Take a look at: regexToDomToCss.ts to see how the styles are generated\r\n */\r\nexport function createSyntaxLifecycle() {\r\n  let Extension: null | Extension\r\n  const syntaxStyle = createStyles('hide')\r\n  // debugger\r\n  syntaxStyle.styleIt(\r\n    `.view-lines {--r: transparent;}.view-lines > div:hover {--r: yellow;}.view-lines:has(:is(.mtk35+.mtk14,.mtk35,.mtk36,.mtk37):hover) {--r: red;}[data-mode-id=\"typescriptreact\"] .view-lines.monaco-mouse-cursor-text>div>span:has(:nth-last-child(3).mtk35+.mtk14+.mtk35) :nth-last-child(2),[data-mode-id=\"typescriptreact\"] .view-lines.monaco-mouse-cursor-text>div>span>.mtk35,[data-mode-id=\"typescriptreact\"] .view-lines.monaco-mouse-cursor-text>div>span>.mtk36,[data-mode-id=\"typescriptreact\"] .view-lines.monaco-mouse-cursor-text>div>span>.mtk37 {color: var(--r);}.mtk36:has(+.mtk37), .mtk36+.mtk37 {color: gray;}`\r\n  )\r\n\r\n  function activate(extension: Extension) {\r\n    Extension = extension // alright...\r\n    const on = bridgeAttribute(extension.item)\r\n\r\n    extension.icon.style.fontWeight = on ? 'bold' : 'normal'\r\n    const title = 'Concise Syntax'\r\n    extension.item.title = on ? `${title}: active` : `${title}: inactive`\r\n    syntaxStyle.styleIt(on ? regexToDomToCss() : '')\r\n  }\r\n  function inactive() {\r\n    if (!Extension) return\r\n    Extension.item.removeAttribute('title')\r\n    Extension.icon.style.removeProperty('font-weight')\r\n  }\r\n\r\n  const cycle = lifecycle<Extension>({\r\n    dom() {\r\n      const dom = domExtension()\r\n      return {\r\n        ...dom,\r\n        watchForRemoval: dom.item,\r\n        check() {\r\n          return !!(document.contains(dom.statusBar?.parentNode) && dom.icon)\r\n        },\r\n      }\r\n    },\r\n    activate(dom) {\r\n      // const attributeObserver = createAttributeArrayMutation({\r\n      //   target: () => dom.item,\r\n      //   watchAttribute: [bridgeBetweenVscodeExtension],\r\n      //   change([bridge]) {\r\n      //     if (bridge) {\r\n      //       activate(domExtension())\r\n      //     } else {\r\n      //       inactive()\r\n      //     }\r\n      //   },\r\n      // })\r\n      // attributeObserver.plug()\r\n      // return () => attributeObserver.disconnect()\r\n    },\r\n    dispose() {\r\n      // syntaxStyle.dispose() FIXME: create a global extension dispose hook\r\n    },\r\n  })\r\n\r\n  return cycle\r\n}\r\ntype Extension = ReturnType<typeof domExtension>\r\n","import {\r\n  currentSelector,\r\n  editorSelector,\r\n  overlaySelector,\r\n  selectedSelector,\r\n} from './keys'\r\nimport { stylesContainer } from './shared'\r\n\r\nexport function queryOverlays(node: Node) {\r\n  if (!(node instanceof HTMLElement)) return []\r\n  const overlays = Array.from(node.querySelectorAll(overlaySelector))\r\n  if (node.matches(overlaySelector)) overlays.push(node)\r\n  return overlays as HTMLElement[]\r\n}\r\nexport function clear(label?: string) {\r\n  stylesContainer\r\n    .querySelectorAll(label ? `[aria-label=\"${label}\"]` : '[aria-label]')\r\n    .forEach((style) => style.remove())\r\n}\r\nexport const styles = {\r\n  clear(label: string) {\r\n    clear(label)\r\n  },\r\n  clearAll() {\r\n    clear()\r\n    // stylesContainer.querySelectorAll('style').forEach((style) => {\r\n    //   style.textContent = ''\r\n    // })\r\n  },\r\n  getOrCreateLabeledStyle(label: string, selector: string) {\r\n    let style = stylesContainer.querySelector(\r\n      `[aria-label=\"${label}\"][selector=\"${selector}\"]`\r\n    ) as HTMLElement\r\n    if (!style || !stylesContainer.contains(style)) {\r\n      style = document.createElement('style')\r\n      style.setAttribute('aria-label', label)\r\n      style.setAttribute('selector', selector)\r\n      stylesContainer.appendChild(style)\r\n    }\r\n    return style\r\n  },\r\n  swapLabeledStyle(oldLabel: string, newLabel: string) {\r\n    const styles = stylesContainer.querySelectorAll(\r\n      `[aria-label=\"${oldLabel}\"]`\r\n    )\r\n    styles.forEach((style) => {\r\n      style.setAttribute('aria-label', newLabel)\r\n      style.textContent = style.textContent?.replace(oldLabel, newLabel) ?? ''\r\n    })\r\n  },\r\n}\r\n\r\nexport type Selected = {\r\n  node: Node\r\n  selector: string\r\n  add: boolean\r\n  set: Set<number>\r\n  color: string\r\n  label: string\r\n}\r\nexport function tryGetAttribute(\r\n  line: HTMLElement,\r\n  attribute: string\r\n): string | undefined {\r\n  // @ts-ignore\r\n  return (line.editor =\r\n    line.closest(`[${attribute}]`)?.getAttribute(attribute) ??\r\n    // @ts-ignore\r\n    line.editor)\r\n}\r\n\r\nexport function findScopeElements(view: HTMLElement) {\r\n  type H = HTMLElement | null\r\n  const container = view.querySelector(':scope > div > .editor-container') as H\r\n  const nested = view.querySelector(\r\n    ':scope > div > div > div > .split-view-container'\r\n  ) as H\r\n  const editor = container?.querySelector(editorSelector) as H\r\n  const overlay = editor?.querySelector(overlaySelector) as H\r\n  const anyLine = overlay?.querySelector(\r\n    `${selectedSelector}, ${currentSelector}`\r\n  ) as H\r\n  return { nested, container, editor, overlay, anyLine }\r\n}\r\nfunction lookup(node: Node | null, up: number): Node {\r\n  return Array(up)\r\n    .fill(0)\r\n    .reduce((acc, _) => acc?.parentElement, node)\r\n}\r\nexport function lookupTo(\r\n  node: Node | null,\r\n  up: number,\r\n  to: Node\r\n): node is HTMLElement {\r\n  return lookup(node, up) === to\r\n}\r\n\r\nexport function e(el: unknown): el is HTMLElement {\r\n  return el instanceof HTMLElement\r\n}\r\n\r\nexport function guardStack(\r\n  stack: Map<HTMLElement, Function>,\r\n  key: HTMLElement,\r\n  cleanup: Function\r\n) {\r\n  if (stack.has(key)) {\r\n    console.warn('stack has key', stack, key)\r\n    stack.get(key)?.()\r\n    stack.delete(key)\r\n  }\r\n  stack.set(key, cleanup)\r\n}\r\n\r\nexport function parseTopStyle(node: HTMLElement) {\r\n  return Number(node.style?.top.match(/\\d+/)?.[0])\r\n}\r\n","import {\r\n  currentSelector,\r\n  highlightSelector,\r\n  idSelector,\r\n  linesSelector,\r\n  selectedSelector,\r\n} from './keys'\r\nimport { lifecycle } from './lifecycle'\r\nimport {\r\n  createAttributeArrayMutation,\r\n  specialChildrenMutation,\r\n  createMutation,\r\n  styleIt,\r\n} from './shared'\r\nimport {\r\n  Selected,\r\n  e,\r\n  findScopeElements,\r\n  guardStack,\r\n  parseTopStyle,\r\n  styles,\r\n} from './utils'\r\n\r\n/**\r\n * @description Change color of highlighted or selected lines\r\n *\r\n * Read this function from bottom to top\r\n *\r\n * At the bottom is the lifecycle function\r\n *\r\n * At the top is main function: createHighlight\r\n */\r\nexport function createHighlightLifeCycle() {\r\n  // prettier-ignore\r\n  function createHighlight({ node, selector, add, set, label, color }: Selected) {\r\n    if (!e(node) || !node.querySelector(selector)) return\r\n    const top = parseTopStyle(node)\r\n    if (\r\n      isNaN(top) ||\r\n      set.has(top) === add ||\r\n      (!add &&\r\n        // FIXME: figure out how to overcome vscode rapid dom swap at viewLayers.ts _finishRenderingInvalidLines\r\n        document.querySelector(\r\n          `[aria-label=\"${label}\"]`+highlightSelector + `>[style*=\"${top}\"]>` + selector\r\n        ))\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // funny code\r\n    set[add ? 'add' : 'delete'](top)\r\n\r\n    const lines = Array.from(set)\r\n      .reduce((acc, top) => acc + `[style*=\"${top}\"],`, '')\r\n      .slice(0, -1)\r\n\r\n    styleIt(\r\n      styles.getOrCreateLabeledStyle(label , selector),\r\n      `[aria-label=\"${label}\"]${linesSelector} :is(${lines}) {\r\n\t\t\t\t\t--r: ${color};\r\n\t\t\t}`\r\n    )\r\n\r\n    return true\r\n  }\r\n\r\n  function editorOverlayLifecycle(editor: HTMLElement, overlay: HTMLElement) {\r\n    // lookup state\r\n    let editorLabel = editor.getAttribute('aria-label') as any\r\n\r\n    const EditorLanguageTracker = createAttributeArrayMutation({\r\n      target: () => editor,\r\n      watchAttribute: ['data-mode-id', 'aria-label'],\r\n      change([language, label], [, oldLabel]) {\r\n        editorLabel = label\r\n        if (!language || !label) return // hydrating...\r\n\r\n        OverlayLineTracker.disconnect()\r\n\r\n        if (label.match(/(\\.tsx$)|(\\.tsx, E)/)) {\r\n          if (language === 'typescriptreact') {\r\n            OverlayLineTracker.observe()\r\n          }\r\n          if (oldLabel && label != oldLabel) {\r\n            styles.clear(oldLabel)\r\n            mount()\r\n          }\r\n        } else {\r\n          styles.clear(label)\r\n        }\r\n      },\r\n    })\r\n    function mount() {\r\n      selectedLines.clear()\r\n      currentLines.clear()\r\n      overlay.childNodes.forEach((node) => highlightStyles(node, true)) // if you restart vscode, there might be selected lines already\r\n    }\r\n\r\n    // lookup state\r\n    let selectedLines = new Set<number>()\r\n    let currentLines = new Set<number>()\r\n\r\n    const OverlayLineTracker = createMutation({\r\n      target: () => overlay,\r\n      options: {\r\n        childList: true,\r\n      },\r\n      added(node) {\r\n        highlightStyles(node, true)\r\n      },\r\n      removed(node) {\r\n        highlightStyles(node, false)\r\n      },\r\n    })\r\n\r\n    function highlightStyles(node: Node, add: boolean) {\r\n      if (!editorLabel) return\r\n      const pre = { node, add, label: editorLabel }\r\n      createHighlight({\r\n        selector: selectedSelector,\r\n        color: 'orange',\r\n        set: selectedLines,\r\n        ...pre,\r\n      }) ||\r\n        createHighlight({\r\n          selector: currentSelector,\r\n          color: 'brown',\r\n          set: currentLines,\r\n          ...pre,\r\n        })\r\n    }\r\n\r\n    // FIXME: find a better way to handle selected lines flickering and layout shifts\r\n    // issue: the top style shifts right before the last frame\r\n    let done = false\r\n    const lineTracker = createAttributeArrayMutation({\r\n      target: () => overlay,\r\n      children: true,\r\n      watchAttribute: ['style'],\r\n      change([style], [oldStyle], node) {\r\n        if (done) return\r\n        const top = parseTopStyle(node)\r\n        if (!isNaN(top) && style && oldStyle != style) {\r\n          done = true\r\n          mount()\r\n          lineTracker.stop()\r\n        }\r\n      },\r\n    })\r\n    mount()\r\n    EditorLanguageTracker.plug()\r\n    lineTracker.plug()\r\n    const layoutShift = setTimeout(lineTracker.stop, 500)\r\n\r\n    return function dispose() {\r\n      clearTimeout(layoutShift)\r\n      lineTracker.stop\r\n      if (editorLabel) styles.clear(editorLabel)\r\n      EditorLanguageTracker.disconnect()\r\n      OverlayLineTracker.disconnect()\r\n    }\r\n  }\r\n\r\n  const cycle = lifecycle({\r\n    dom() {\r\n      type H = HTMLElement\r\n      const gridRoot = document.querySelector(\r\n        '#workbench\\\\.parts\\\\.editor > div.content > div > div'\r\n      ) as H\r\n      const root = gridRoot.querySelector(\r\n        ':scope > div > div > div.monaco-scrollable-element > div.split-view-container'\r\n      ) as H\r\n      const editor = root?.querySelector(idSelector) as H\r\n      const overlays = editor?.querySelector(highlightSelector)\r\n        ?.parentElement as H\r\n      return {\r\n        check() {\r\n          return !!overlays\r\n        },\r\n        watchForRemoval: gridRoot,\r\n      }\r\n    },\r\n    activate(DOM) {\r\n      /**\r\n       * - split-view-container\r\n       * \t\t- split-view-view -> Recursion\r\n       * \t\t\t- editor-container\r\n       * \t\t\t\t- editor-instance\r\n       * \t\t\t\t\t- view-overlays\r\n       * \t\t\t\t\t\t\t- selected-text\r\n       * \t\t\t\t\t\t\t- current-line\r\n       */\r\n      let recStack = new Map<HTMLElement, Function>()\r\n      let editorStack = new Map<HTMLElement, Function>()\r\n      let treeStack = new Map<HTMLElement, Function>()\r\n\r\n      const REC_EditorOverlayTracker = (target: HTMLElement) =>\r\n        specialChildrenMutation({\r\n          target: () => target,\r\n          options: {\r\n            childList: true,\r\n          },\r\n          added,\r\n          removed: bruteForceRemove,\r\n        })\r\n      function clearStacks(condition?: (keyNode: HTMLElement) => boolean) {\r\n        for (const stack of [recStack, editorStack, treeStack]) {\r\n          for (const [keyNode] of stack) {\r\n            if (condition && !condition(keyNode)) continue\r\n            stack.get(keyNode)?.()\r\n            stack.delete(keyNode)\r\n          }\r\n        }\r\n      }\r\n      function awkwardStack(elements: ReturnType<typeof findScopeElements>) {\r\n        const { overlay, editor } = elements\r\n        if (overlay && editor && !editorStack.has(editor)) {\r\n          editorStack.set(editor, editorOverlayLifecycle(editor, overlay))\r\n          return true\r\n        }\r\n      }\r\n      function added(splitViewView: HTMLElement) {\r\n        const elements = findScopeElements(splitViewView)\r\n\r\n        if (elements.nested) {\r\n          const rec = REC_EditorOverlayTracker(elements.nested)\r\n          rec.plug()\r\n\r\n          guardStack(recStack, splitViewView, rec.stop) // don't \"unplug\" because the unwinding will cause a stack overflow plus the \"removed\" method is currently brute force\r\n        } else if (awkwardStack(elements)) {\r\n          // noop\r\n        } else if (!elements.overlay) {\r\n          const treeTracker = specialChildrenMutation({\r\n            target: () => splitViewView,\r\n            options: {\r\n              childList: true,\r\n              subtree: true,\r\n            },\r\n            added() {\r\n              const elements = findScopeElements(splitViewView)\r\n              if (awkwardStack(elements)) {\r\n                treeTracker.stop()\r\n              }\r\n            },\r\n            removed() {},\r\n          })\r\n\r\n          treeTracker.plug()\r\n          guardStack(treeStack, splitViewView, treeTracker.stop) // don't \"unplug\" because the unwinding will cause a stack overflow plus the \"removed\" method is currently brute force\r\n        }\r\n      }\r\n\r\n      function bruteForceRemove(splitViewView: HTMLElement) {\r\n        // FIXME: this should be handled by each cycle, there is an unhandled cleanup\r\n        clearStacks((keyNode) => !DOM.watchForRemoval.contains(keyNode))\r\n      }\r\n\r\n      let rebootCleanup: Function | undefined\r\n      debugger\r\n      const reboot = specialChildrenMutation({\r\n        target: () => DOM.watchForRemoval,\r\n        options: {\r\n          childList: true,\r\n        },\r\n        added(node) {\r\n          if (rebootCleanup) throw new Error('reboot cleanup already exists')\r\n\r\n          type H = HTMLElement | undefined\r\n          if (!e(node)) return console.warn('no node')\r\n          const rootContainer = node.querySelector(\r\n            'div.split-view-container'\r\n          ) as H\r\n          if (!rootContainer) return console.warn('no root container')\r\n\r\n          const root = REC_EditorOverlayTracker(rootContainer)\r\n\r\n          // root.plug() special case, the first view never gets removed * sigh *\r\n          const [firstView, ...restViews] = rootContainer.childNodes\r\n          const container = findScopeElements(firstView as any)\r\n            .container as any as HTMLElement | undefined\r\n          let stopFirstContainer = () => {}\r\n          if (container) {\r\n            const firsContainerTracker = specialChildrenMutation({\r\n              target: () => container as any,\r\n              options: {\r\n                childList: true,\r\n              },\r\n              added() {\r\n                added(firstView as any)\r\n              },\r\n              removed() {\r\n                bruteForceRemove(firstView as any)\r\n              },\r\n            })\r\n            firsContainerTracker.plug()\r\n            stopFirstContainer = firsContainerTracker.stop\r\n          }\r\n          root.plug(() => restViews)\r\n\r\n          rebootCleanup = () => {\r\n            root.stop()\r\n            stopFirstContainer()\r\n            // rebootCleanup = undefined\r\n          }\r\n        },\r\n        removed(node) {\r\n          rebootCleanup?.()\r\n          rebootCleanup = undefined\r\n        },\r\n      })\r\n      reboot.plug()\r\n\r\n      return () => {\r\n        reboot.stop()\r\n        rebootCleanup?.()\r\n        rebootCleanup = undefined\r\n        clearStacks()\r\n      }\r\n    },\r\n    dispose() {\r\n      styles.clearAll()\r\n    },\r\n  })\r\n\r\n  return cycle\r\n}\r\n","import { createSyntaxLifecycle } from './syntax'\r\nimport { createHighlightLifeCycle } from './highlight'\r\nimport { extensionId } from './keys'\r\n\r\nconst syntax = createSyntaxLifecycle()\r\nconst highlight = createHighlightLifeCycle()\r\n\r\nconst conciseSyntax = {\r\n  activate() {\r\n    syntax.activate()\r\n    highlight.activate()\r\n  },\r\n  dispose() {\r\n    syntax.dispose()\r\n    highlight.dispose()\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nif (window.conciseSyntax) {\r\n  // @ts-ignore\r\n  window.conciseSyntax.dispose()\r\n}\r\n// @ts-ignore\r\nwindow.conciseSyntax = conciseSyntax\r\nconciseSyntax.activate()\r\n\r\nconsole.log(extensionId, conciseSyntax)\r\n"],"names":["styles","top","elements"],"mappings":"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"}