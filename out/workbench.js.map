{"version":3,"file":"workbench.js","sources":["../src/shared/utils.ts","../src/workbench/index.ts"],"sourcesContent":["// TODO: test if this is more \"performant\" or just mental gymnastics\r\nexport function watchForRemoval(targetElement: Element, callback: Function) {\r\n  let done = false\r\n  let stack: Node[] = []\r\n  const rootObserver = new MutationObserver((mutationsList) => {\r\n    mutationsList.forEach((mutation) => {\r\n      if (\r\n        done ||\r\n        !stack.includes(mutation.target) ||\r\n        !mutation.removedNodes.length\r\n      )\r\n        return\r\n\r\n      const nodes = Array.from(mutation.removedNodes)\r\n      // console.log(mutation.target)\r\n\r\n      // direct match\r\n      if (\r\n        nodes.indexOf(targetElement) > -1 ||\r\n        // parent match\r\n        nodes.some((parent) => parent.contains(targetElement))\r\n      ) {\r\n        dispose()\r\n        callback()\r\n        return\r\n      }\r\n    })\r\n  })\r\n\r\n  function REC_ObserverAncestors(element: Element) {\r\n    if (!element.parentElement || element.parentElement === document.body) {\r\n      return\r\n    }\r\n    stack.push(element.parentElement)\r\n    rootObserver.observe(element.parentElement, { childList: true })\r\n    REC_ObserverAncestors(element.parentElement)\r\n  }\r\n\r\n  // Start observing ancestor hierarchy\r\n  REC_ObserverAncestors(targetElement)\r\n\r\n  function dispose() {\r\n    done = true\r\n    stack = []\r\n    rootObserver.takeRecords()\r\n    rootObserver.disconnect()\r\n  }\r\n  return dispose\r\n}\r\n","/* eslint-env browser */\r\n\r\nimport { watchForRemoval } from '../shared/utils'\r\n\r\nlet conciseSyntax = {\r\n  init: false,\r\n  interval: 0 as any as NodeJS.Timeout,\r\n  dispose: null as null | Function,\r\n  extension: null as null | Extension,\r\n}\r\n// @ts-ignore\r\nwindow.conciseSyntax ??= conciseSyntax\r\n\r\nconst extensionId = 'kauderk.concise-syntax'\r\nconst windowId = 'window.' + extensionId\r\n// exploit the fact that vscode renders data to the dom, could be any other attribute\r\nconst bridgeBetweenVscodeExtension = 'aria-label'\r\nconst customCSS = `\r\n\t.view-lines {\r\n\t\t--r: transparent;\r\n\t}\r\n\t.view-lines:has(.dummy:hover) {\r\n\t\t--r: red;\r\n\t}\r\n\t.dummy {\r\n\t\tcolor: var(--r);\r\n\t}\r\n\t`\r\n\r\nconst idSelector = '[data-mode-id=\"typescriptreact\"]'\r\nconst linesSelector = idSelector + ` .view-lines.monaco-mouse-cursor-text`\r\nconst highlightSelector = idSelector + ` .view-overlays`\r\nconst languages = ['typescriptreact', 'javascriptreact']\r\n\r\nfunction regexToDomToCss() {\r\n  const lineEditor = document.querySelector(linesSelector)\r\n  if (!lineEditor) {\r\n    console.log('no editor')\r\n    return customCSS\r\n  }\r\n  type Flag = {\r\n    hide: string\r\n    hover: string\r\n  }\r\n  type Flags = null | Flag\r\n  const flags = {\r\n    jsxTag: null as Flags,\r\n    jsxTernaryBrace: null as Flags,\r\n    jsxTernaryOtherwise: null as Flags,\r\n    vsCodeHiddenTokens: null as Flags,\r\n    beginQuote: null as Flags,\r\n    endQuote: null as Flags,\r\n  }\r\n  const customFlags = {\r\n    singleQuotes: null as string | null,\r\n  }\r\n\r\n  const root = `${linesSelector}>div>span`\r\n  const lines = Array.from(lineEditor.querySelectorAll('div>span'))\r\n\r\n  function toFlatClassList<T extends { join: (to?: string) => string }>(\r\n    Array: T[]\r\n  ) {\r\n    return Array.reduce(\r\n      (acc, val) => acc.concat(val.join('.')),\r\n      <string[]>[]\r\n    ) as string[] // FIXME: avoid casting\r\n  }\r\n  function SliceClassList(line: Element, slice: number) {\r\n    const sliced = Array.from(line.children)\r\n      .slice(slice)\r\n      .map((c) => Array.from(c.classList))\r\n    return Object.assign(sliced, { okLength: sliced.length == slice * -1 })\r\n  }\r\n\r\n  parser: for (const line of lines) {\r\n    const text = line.textContent\r\n    if (!text) continue\r\n    let anyFlag = false\r\n\r\n    if (text.match('.+(</(?<jsxTag>.*)?>)$')?.groups?.jsxTag) {\r\n      if (flags.jsxTag || flags.vsCodeHiddenTokens) continue\r\n\r\n      const closing = SliceClassList(line, -3)\r\n      if (!closing.okLength) continue\r\n      const [angleBracket, tag, right] = closing.flat()\r\n      if (angleBracket !== right) continue\r\n\r\n      flags.jsxTag = {\r\n        // find the last </tag> and hide it \"tag\" which is the second to last child\r\n        hide: `:has(:nth-last-child(3).${angleBracket}+.${tag}+.${angleBracket}) :nth-last-child(2)`,\r\n        hover: `.${angleBracket}+.${tag}`,\r\n      }\r\n      flags.vsCodeHiddenTokens = {\r\n        // this is the most common case, you could derive it from other flags\r\n        hide: `>.${angleBracket}`,\r\n        hover: `.${angleBracket}`,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (\r\n      text.match(/(\\{).+\\?.+?(?<ternaryBrace>\\()$/)?.groups?.ternaryBrace\r\n    ) {\r\n      if (flags.jsxTernaryBrace) continue\r\n\r\n      const closing = SliceClassList(line, -4)\r\n      if (!closing.okLength) continue\r\n      // prettier-ignore\r\n      const [blank, questionMark, blank2, openBrace] = toFlatClassList(closing)\r\n      const selector = `.${blank}+.${questionMark}+.${blank}+.${openBrace}:last-child`\r\n\r\n      flags.jsxTernaryBrace = {\r\n        // find the last open brace in \" ? (\"\r\n        hide: `:has(${selector}) :last-child`,\r\n        hover: selector,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (\r\n      text.match(/(?<ternaryOtherwise>\\).+?:.+\\})/)?.groups?.ternaryOtherwise\r\n    ) {\r\n      if (flags.jsxTernaryOtherwise) continue\r\n\r\n      const closing = SliceClassList(line, -7)\r\n      if (!closing.okLength) continue\r\n      // prettier-ignore\r\n      const [blank0, closeBrace, blank, colon, blank2, nullIsh,closeBracket] = toFlatClassList(closing)\r\n      const selector = `.${blank0}+.${closeBrace}+.${blank}+.${colon}+.${blank2}+.${nullIsh}+.${closeBracket}:last-child`\r\n\r\n      flags.jsxTernaryOtherwise = {\r\n        // find \") : null}\" then hide it all\r\n        hide: `:has(${selector}) *`,\r\n        hover: selector,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (text.match(/(?<singleQuotes>\"\"|''|``)/)?.groups?.singleQuotes) {\r\n      if (customFlags.singleQuotes) continue\r\n\r\n      const array = Array.from(line.children)\r\n      const quote = /\"|'|`/\r\n      singleQuotes: for (let i = 0; i < array.length; i++) {\r\n        const child = array[i]\r\n\r\n        const current = child.textContent?.match(quote)\r\n        const next = array[i + 1]?.textContent?.match(quote)\r\n        if (current?.[0].length == 1 && current[0] === next?.[0]) {\r\n          const beginQuote = Array.from(child.classList).join('.')\r\n          const endQuote = Array.from(array[i + 1].classList).join('.') // wow, why isn't typescript freaking out?\r\n\r\n          // Find \"\" or '' or `` and show them\r\n          customFlags.singleQuotes = `.${beginQuote}:has(+.${endQuote}), .${beginQuote}+.${endQuote} {\r\n\t\t\t\t\t\t\tcolor: gray;\r\n\t\t\t\t\t\t}`\r\n          flags.beginQuote = {\r\n            // this is the most common case, you could derive it from other flags\r\n            hide: `>.${beginQuote}`,\r\n            hover: `.${beginQuote}`,\r\n          }\r\n          flags.endQuote = {\r\n            // this is the most common case, you could derive it from other flags\r\n            hide: `>.${endQuote}`,\r\n            hover: `.${endQuote}`,\r\n          }\r\n\r\n          anyFlag = true\r\n          break singleQuotes\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      anyFlag &&\r\n      Object.values(flags).every((f) => !!f) &&\r\n      Object.values(customFlags).every((f) => !!f)\r\n    ) {\r\n      break parser\r\n    }\r\n  }\r\n  // you know the concise syntax hover feature will work because you found the common case\r\n  const validFlags = Object.values(flags).filter(\r\n    (f) => f?.hide && f.hover\r\n  ) as Flag[] // FIXME: avoid casting\r\n  if (validFlags.length && flags.vsCodeHiddenTokens?.hover) {\r\n    const toHover = validFlags.map((f) => f.hover).join(',')\r\n    const toHidden = validFlags.map((f) => root + f.hide).join(',')\r\n    const toCustom = Object.values(customFlags)\r\n      .filter((f) => !!f)\r\n      .join('\\n')\r\n    return `\r\n\t\t\t.view-lines {\r\n\t\t\t\t--r: transparent;\r\n\t\t\t}\r\n\t\t\t.view-lines > div:hover {\r\n\t\t\t\t--r: yellow;\r\n\t\t\t}\r\n\t\t\t.view-lines:has(:is(${toHover}):hover) {\r\n\t\t\t\t--r: red;\r\n\t\t\t}\r\n\t\t\t${toHidden} {\r\n\t\t\t\tcolor: var(--r);\r\n\t\t\t}\r\n\t\t\t${toCustom}\r\n\t\t\t`\r\n      .replace(/\\r|\\n/g, '')\r\n      .replaceAll(/\\t+/g, '\\n')\r\n  }\r\n  // FIXME: honestly, the user should get a warning: the extension can't find the common case\r\n  return customCSS\r\n}\r\n\r\n/**\r\n * Apply custom logic when the vscode extension changes the bridge attribute\r\n */\r\nfunction activate(extension: Extension) {\r\n  Extension = extension // alright...\r\n  const isActive = tryParseData(extension.item)\r\n  applyConciseSyntax(isActive, extension)\r\n  function applyConciseSyntax(on: boolean, _extension: typeof extension) {\r\n    const styles =\r\n      document.getElementById(windowId) ?? document.createElement('style')\r\n    styles.id = windowId\r\n    _extension.icon.style.fontWeight = on ? 'bold' : 'normal'\r\n    const title = 'Concise Syntax'\r\n    _extension.item.title = on ? `${title}: active` : `${title}: inactive`\r\n    styles.textContent = on ? regexToDomToCss() : ''\r\n    document.body.appendChild(styles)\r\n  }\r\n}\r\n/**\r\n * Clean up\r\n */\r\nfunction inactive() {\r\n  document.getElementById(windowId)?.remove()\r\n  if (!Extension) return\r\n  Extension.item.removeAttribute('title')\r\n  Extension.icon.style.removeProperty('font-weight')\r\n}\r\n\r\nlet highlightedLines = new Set<number>()\r\nconst selectedSelector = '.selected-text'\r\nconst currentLineSelector = '.current-line'\r\nlet currentLines = new Set<number>()\r\n\r\nconst Highlight: MutationOptions = {\r\n  added(node) {\r\n    highlightStyles(node, true)\r\n  },\r\n  removed(node) {\r\n    highlightStyles(node, false)\r\n  },\r\n}\r\nfunction highlightStyles(node: HTMLElement, add: boolean) {\r\n  if (node.querySelector(selectedSelector)) {\r\n    const top = Number(node.style?.top.match(/\\d+/)?.[0])\r\n    if (isNaN(top)) return\r\n    if (highlightedLines.has(top) === add) return\r\n\r\n    // FIXME: figure out how to overcome vscode rapid dom swap at viewLayers.ts _finishRenderingInvalidLines\r\n    if (\r\n      !add &&\r\n      document.querySelector(\r\n        highlightSelector + `>[style*=\"${top}\"]>` + selectedSelector\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // funny code\r\n    highlightedLines[add ? 'add' : 'delete'](top)\r\n\r\n    const id = windowId + '.highlight'\r\n    const styles =\r\n      document.getElementById(id) ?? document.createElement('style')\r\n    styles.id = id\r\n    const lines = Array.from(highlightedLines)\r\n      .reduce((acc, top) => acc + `[style*=\"${top}\"],`, '')\r\n      .slice(0, -1)\r\n\r\n    styles.textContent = `\r\n\t\t\t${linesSelector} :is(${lines}) {\r\n\t\t\t\t\t--r: orange;\r\n\t\t\t}\r\n\t\t\t`\r\n      .replace(/\\r|\\n/g, '')\r\n      .replaceAll(/\\t+/g, '\\n')\r\n    document.body.appendChild(styles)\r\n  } else if (node.querySelector(currentLineSelector)) {\r\n    const top = Number(node.style?.top.match(/\\d+/)?.[0])\r\n    if (isNaN(top)) return\r\n    // FIXME: figure out how to overcome vscode rapid dom swap at viewLayers.ts _finishRenderingInvalidLines\r\n    if (\r\n      !add &&\r\n      document.querySelector(\r\n        highlightSelector + `>[style*=\"${top}\"]>` + currentLineSelector\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // funny code\r\n    currentLines[add ? 'add' : 'delete'](top)\r\n\r\n    const id = windowId + '.current'\r\n    const styles =\r\n      document.getElementById(id) ?? document.createElement('style')\r\n    styles.id = id\r\n    const lines = Array.from(currentLines)\r\n      .reduce((acc, top) => acc + `[style*=\"${top}\"],`, '')\r\n      .slice(0, -1)\r\n\r\n    styles.textContent = `\r\n\t\t\t${linesSelector} :is(${lines}) {\r\n\t\t\t\t\t--r: brown;\r\n\t\t\t}\r\n\t\t\t`\r\n      .replace(/\\r|\\n/g, '')\r\n      .replaceAll(/\\t+/g, '\\n')\r\n    document.body.appendChild(styles)\r\n  }\r\n}\r\n\r\n//#region Highlight Lifecycle\r\nconst highlightEditorMap = new Map<Element, MutationObserver>()\r\nconst Deployer = {\r\n  added(node) {\r\n    if (node.matches?.(highlightSelector)) {\r\n      debugger\r\n      const highlightEditor = createMutation(Highlight)\r\n      highlightEditor.observe(node, {\r\n        childList: true,\r\n      })\r\n      highlightEditorMap.set(node, highlightEditor)\r\n    }\r\n  },\r\n  removed(node) {\r\n    let match = node.matches?.(highlightSelector)\r\n    if (match) {\r\n      debugger\r\n      highlightEditorMap.get(node)?.disconnect()\r\n      highlightEditorMap.delete(node)\r\n    }\r\n  },\r\n} satisfies MutationOptions\r\nconst highlightDeployer = createMutation(Deployer)\r\n//#endregion\r\n\r\n//#region StatusBar Lifecycle\r\ntype Extension = ReturnType<typeof domExtension>\r\nlet Extension = conciseSyntax.extension\r\nlet disposeObserver = conciseSyntax.dispose ?? (() => {})\r\nlet previousData: boolean | undefined = undefined\r\nconst tryParseData = (target: any) =>\r\n  // You could pass stringified data\r\n  !target.getAttribute?.(bridgeBetweenVscodeExtension)?.includes('inactive')\r\n\r\nconst attributeObserver = new MutationObserver((mutations) => {\r\n  for (const mutation of mutations) {\r\n    const newData = tryParseData(mutation.target)\r\n    if (previousData === newData) return\r\n    previousData = newData\r\n\r\n    if (newData) {\r\n      activate(domExtension())\r\n    } else {\r\n      inactive()\r\n    }\r\n  }\r\n})\r\nfunction domExtension() {\r\n  const statusBar = document.querySelector('.right-items') as HTMLElement\r\n  const item = statusBar?.querySelector(`[id=\"${extensionId}\"]`) as HTMLElement\r\n  const icon = item?.querySelector('.codicon') as HTMLElement\r\n  return { icon, item, statusBar }\r\n}\r\nlet anyUsage = false\r\nfunction patch() {\r\n  const dom = domExtension()\r\n  if (\r\n    !document.contains(dom.statusBar?.parentNode) ||\r\n    !dom.icon ||\r\n    conciseSyntax.init\r\n  )\r\n    return\r\n  anyUsage = true\r\n  conciseSyntax.init = true\r\n  clearInterval(conciseSyntax.interval)\r\n  disposeObserver = watchForRemoval(dom.item, reload)\r\n  attributeObserver.observe(dom.item, {\r\n    attributes: true,\r\n    attributeFilter: [bridgeBetweenVscodeExtension],\r\n  })\r\n  activate(dom)\r\n}\r\nfunction dispose() {\r\n  disposeObserver()\r\n  attributeObserver.disconnect()\r\n  conciseSyntax.init = false\r\n  clearInterval(conciseSyntax.interval)\r\n}\r\nfunction reload() {\r\n  dispose()\r\n  conciseSyntax.interval = setInterval(patch, 5000)\r\n}\r\n\r\ntype MutationOptions = {\r\n  added(node: HTMLElement): void\r\n  removed(node: HTMLElement): void\r\n}\r\nfunction createMutation(option: MutationOptions) {\r\n  return new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      mutation.addedNodes.forEach((node: any) => option.added(node))\r\n      mutation.removedNodes.forEach((node: any) => option.removed(node))\r\n    })\r\n  })\r\n}\r\n//#endregion\r\n\r\n// avoid heavy vscode hydration\r\n\r\nlet done = false\r\nconst patchHighlight = () => {\r\n  const editor = document.querySelector(highlightSelector) as HTMLElement\r\n  if (!editor) {\r\n    return\r\n  }\r\n  const closestEditorAncestor = document.querySelector(\r\n    '.monaco-scrollable-element'\r\n  )\r\n  if (done || !closestEditorAncestor) {\r\n    return\r\n  }\r\n  done = true\r\n  clearInterval(patchHighlightInterval)\r\n  debugger\r\n  Deployer.added(editor)\r\n  highlightDeployer.observe(closestEditorAncestor, {\r\n    childList: true,\r\n    subtree: true,\r\n  })\r\n}\r\nlet patchHighlightInterval = setInterval(patchHighlight, 1000)\r\nreload()\r\n\r\nconst exhaust = setTimeout(() => {\r\n  clearTimeout(exhaust)\r\n  if (!anyUsage) {\r\n    clearInterval(conciseSyntax.interval)\r\n  }\r\n}, 1000 * 60 * 2)\r\n\r\nconciseSyntax.dispose = () => {\r\n  dispose()\r\n  inactive()\r\n  highlightEditorMap.clear()\r\n  highlightDeployer.disconnect()\r\n  highlightedLines.clear()\r\n  currentLines.clear()\r\n}\r\n\r\n/**\r\n * TODO: regexToDomToCss\r\n * toggle lookup.settings.json\r\n * hydrate window.styles when settings change\r\n */\r\n"],"names":["done","dispose","Array","top"],"mappings":";;;;AACgB,WAAA,gBAAgB,eAAwB,UAAoB;AAC1E,QAAIA,QAAO;AACX,QAAI,QAAgB,CAAA;AACpB,UAAM,eAAe,IAAI,iBAAiB,CAAC,kBAAkB;AAC7C,oBAAA,QAAQ,CAAC,aAAa;AAEhC,YAAAA,SACA,CAAC,MAAM,SAAS,SAAS,MAAM,KAC/B,CAAC,SAAS,aAAa;AAEvB;AAEF,cAAM,QAAQ,MAAM,KAAK,SAAS,YAAY;AAK5C,YAAA,MAAM,QAAQ,aAAa,IAAI;AAAA,QAE/B,MAAM,KAAK,CAAC,WAAW,OAAO,SAAS,aAAa,CAAC,GACrD;AACQ,UAAAC;AACC;AACT;AAAA,QACF;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAED,aAAS,sBAAsB,SAAkB;AAC/C,UAAI,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkB,SAAS,MAAM;AACrE;AAAA,MACF;AACM,YAAA,KAAK,QAAQ,aAAa;AAChC,mBAAa,QAAQ,QAAQ,eAAe,EAAE,WAAW,MAAM;AAC/D,4BAAsB,QAAQ,aAAa;AAAA,IAC7C;AAGA,0BAAsB,aAAa;AAEnC,aAASA,WAAU;AACV,MAAAD,QAAA;AACP,cAAQ,CAAA;AACR,mBAAa,YAAY;AACzB,mBAAa,WAAW;AAAA,IAC1B;AACO,WAAAC;AAAA,EACT;AC5CA,MAAI,gBAAgB;AAAA,IAClB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AAEA,SAAO,kBAAP,OAAO,gBAAkB;AAEzB,QAAM,cAAc;AACpB,QAAM,WAAW,YAAY;AAE7B,QAAM,+BAA+B;AACrC,QAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYlB,QAAM,aAAa;AACnB,QAAM,gBAAgB,aAAa;AACnC,QAAM,oBAAoB,aAAa;AAGvC,WAAS,kBAAkB;;AACnB,UAAA,aAAa,SAAS,cAAc,aAAa;AACvD,QAAI,CAAC,YAAY;AACf,cAAQ,IAAI,WAAW;AAChB,aAAA;AAAA,IACT;AAMA,UAAM,QAAQ;AAAA,MACZ,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,MACrB,oBAAoB;AAAA,MACpB,YAAY;AAAA,MACZ,UAAU;AAAA,IAAA;AAEZ,UAAM,cAAc;AAAA,MAClB,cAAc;AAAA,IAAA;AAGV,UAAA,OAAO,GAAG,aAAa;AAC7B,UAAM,QAAQ,MAAM,KAAK,WAAW,iBAAiB,UAAU,CAAC;AAEhE,aAAS,gBACPC,QACA;AACA,aAAOA,OAAM;AAAA,QACX,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,GAAG,CAAC;AAAA,QAC5B,CAAC;AAAA,MAAA;AAAA,IAEf;AACS,aAAA,eAAe,MAAe,OAAe;AACpD,YAAM,SAAS,MAAM,KAAK,KAAK,QAAQ,EACpC,MAAM,KAAK,EACX,IAAI,CAAC,MAAM,MAAM,KAAK,EAAE,SAAS,CAAC;AAC9B,aAAA,OAAO,OAAO,QAAQ,EAAE,UAAU,OAAO,UAAU,QAAQ,GAAA,CAAI;AAAA,IACxE;AAEA;AAAQ,iBAAW,QAAQ,OAAO;AAChC,cAAM,OAAO,KAAK;AAClB,YAAI,CAAC;AAAM;AACX,YAAI,UAAU;AAEd,aAAI,gBAAK,MAAM,wBAAwB,MAAnC,mBAAsC,WAAtC,mBAA8C,QAAQ;AACpD,cAAA,MAAM,UAAU,MAAM;AAAoB;AAExC,gBAAA,UAAU,eAAe,MAAM,EAAE;AACvC,cAAI,CAAC,QAAQ;AAAU;AACvB,gBAAM,CAAC,cAAc,KAAK,KAAK,IAAI,QAAQ;AAC3C,cAAI,iBAAiB;AAAO;AAE5B,gBAAM,SAAS;AAAA;AAAA,YAEb,MAAM,2BAA2B,YAAY,KAAK,GAAG,KAAK,YAAY;AAAA,YACtE,OAAO,IAAI,YAAY,KAAK,GAAG;AAAA,UAAA;AAEjC,gBAAM,qBAAqB;AAAA;AAAA,YAEzB,MAAM,KAAK,YAAY;AAAA,YACvB,OAAO,IAAI,YAAY;AAAA,UAAA;AAGf,oBAAA;AAAA,QAAA,YAEV,gBAAK,MAAM,iCAAiC,MAA5C,mBAA+C,WAA/C,mBAAuD,cACvD;AACA,cAAI,MAAM;AAAiB;AAErB,gBAAA,UAAU,eAAe,MAAM,EAAE;AACvC,cAAI,CAAC,QAAQ;AAAU;AAEvB,gBAAM,CAAC,OAAO,cAAc,QAAQ,SAAS,IAAI,gBAAgB,OAAO;AAClE,gBAAA,WAAW,IAAI,KAAK,KAAK,YAAY,KAAK,KAAK,KAAK,SAAS;AAEnE,gBAAM,kBAAkB;AAAA;AAAA,YAEtB,MAAM,QAAQ,QAAQ;AAAA,YACtB,OAAO;AAAA,UAAA;AAGC,oBAAA;AAAA,QAAA,YAEV,gBAAK,MAAM,iCAAiC,MAA5C,mBAA+C,WAA/C,mBAAuD,kBACvD;AACA,cAAI,MAAM;AAAqB;AAEzB,gBAAA,UAAU,eAAe,MAAM,EAAE;AACvC,cAAI,CAAC,QAAQ;AAAU;AAEjB,gBAAA,CAAC,QAAQ,YAAY,OAAO,OAAO,QAAQ,SAAQ,YAAY,IAAI,gBAAgB,OAAO;AAChG,gBAAM,WAAW,IAAI,MAAM,KAAK,UAAU,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK,YAAY;AAEtG,gBAAM,sBAAsB;AAAA;AAAA,YAE1B,MAAM,QAAQ,QAAQ;AAAA,YACtB,OAAO;AAAA,UAAA;AAGC,oBAAA;AAAA,QAAA,YACD,gBAAK,MAAM,2BAA2B,MAAtC,mBAAyC,WAAzC,mBAAiD,cAAc;AACxE,cAAI,YAAY;AAAc;AAE9B,gBAAM,QAAQ,MAAM,KAAK,KAAK,QAAQ;AACtC,gBAAM,QAAQ;AACd;AAAc,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAC7C,oBAAA,QAAQ,MAAM,CAAC;AAErB,oBAAM,WAAU,WAAM,gBAAN,mBAAmB,MAAM;AACzC,oBAAM,QAAO,iBAAM,IAAI,CAAC,MAAX,mBAAc,gBAAd,mBAA2B,MAAM;AAC1C,mBAAA,mCAAU,GAAG,WAAU,KAAK,QAAQ,CAAC,OAAM,6BAAO,KAAI;AACxD,sBAAM,aAAa,MAAM,KAAK,MAAM,SAAS,EAAE,KAAK,GAAG;AACjD,sBAAA,WAAW,MAAM,KAAK,MAAM,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,GAAG;AAGhD,4BAAA,eAAe,IAAI,UAAU,UAAU,QAAQ,OAAO,UAAU,KAAK,QAAQ;AAAA;AAAA;AAGzF,sBAAM,aAAa;AAAA;AAAA,kBAEjB,MAAM,KAAK,UAAU;AAAA,kBACrB,OAAO,IAAI,UAAU;AAAA,gBAAA;AAEvB,sBAAM,WAAW;AAAA;AAAA,kBAEf,MAAM,KAAK,QAAQ;AAAA,kBACnB,OAAO,IAAI,QAAQ;AAAA,gBAAA;AAGX,0BAAA;AACJ,sBAAA;AAAA,cACR;AAAA,YACF;AAAA,QACF;AAGE,YAAA,WACA,OAAO,OAAO,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KACrC,OAAO,OAAO,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAC3C;AACM,gBAAA;AAAA,QACR;AAAA,MACF;AAEA,UAAM,aAAa,OAAO,OAAO,KAAK,EAAE;AAAA,MACtC,CAAC,OAAM,uBAAG,SAAQ,EAAE;AAAA,IAAA;AAEtB,QAAI,WAAW,YAAU,WAAM,uBAAN,mBAA0B,QAAO;AAClD,YAAA,UAAU,WAAW,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG;AACjD,YAAA,WAAW,WAAW,IAAI,CAAC,MAAM,OAAO,EAAE,IAAI,EAAE,KAAK,GAAG;AAC9D,YAAM,WAAW,OAAO,OAAO,WAAW,EACvC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EACjB,KAAK,IAAI;AACL,aAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAOc,OAAO;AAAA;AAAA;AAAA,KAG3B,QAAQ;AAAA;AAAA;AAAA,KAGR,QAAQ;AAAA,KAEN,QAAQ,UAAU,EAAE,EACpB,WAAW,QAAQ,IAAI;AAAA,IAC5B;AAEO,WAAA;AAAA,EACT;AAKA,WAAS,SAAS,WAAsB;AAC1B,gBAAA;AACN,UAAA,WAAW,aAAa,UAAU,IAAI;AAC5C,uBAAmB,UAAU,SAAS;AAC7B,aAAA,mBAAmB,IAAa,YAA8B;AACrE,YAAM,SACJ,SAAS,eAAe,QAAQ,KAAK,SAAS,cAAc,OAAO;AACrE,aAAO,KAAK;AACZ,iBAAW,KAAK,MAAM,aAAa,KAAK,SAAS;AACjD,YAAM,QAAQ;AACd,iBAAW,KAAK,QAAQ,KAAK,GAAG,KAAK,aAAa,GAAG,KAAK;AACnD,aAAA,cAAc,KAAK,gBAAA,IAAoB;AACrC,eAAA,KAAK,YAAY,MAAM;AAAA,IAClC;AAAA,EACF;AAIA,WAAS,WAAW;;AACT,mBAAA,eAAe,QAAQ,MAAvB,mBAA0B;AACnC,QAAI,CAAC;AAAW;AACN,cAAA,KAAK,gBAAgB,OAAO;AAC5B,cAAA,KAAK,MAAM,eAAe,aAAa;AAAA,EACnD;AAEA,MAAI,uCAAuB;AAC3B,QAAM,mBAAmB;AACzB,QAAM,sBAAsB;AAC5B,MAAI,mCAAmB;AAEvB,QAAM,YAA6B;AAAA,IACjC,MAAM,MAAM;AACV,sBAAgB,MAAM,IAAI;AAAA,IAC5B;AAAA,IACA,QAAQ,MAAM;AACZ,sBAAgB,MAAM,KAAK;AAAA,IAC7B;AAAA,EACF;AACA,WAAS,gBAAgB,MAAmB,KAAc;;AACpD,QAAA,KAAK,cAAc,gBAAgB,GAAG;AAClC,YAAA,MAAM,QAAO,gBAAK,UAAL,mBAAY,IAAI,MAAM,WAAtB,mBAA+B,EAAE;AACpD,UAAI,MAAM,GAAG;AAAG;AACZ,UAAA,iBAAiB,IAAI,GAAG,MAAM;AAAK;AAIrC,UAAA,CAAC,OACD,SAAS;AAAA,QACP,oBAAoB,aAAa,GAAG,QAAQ;AAAA,MAAA,GAE9C;AACA;AAAA,MACF;AAGA,uBAAiB,MAAM,QAAQ,QAAQ,EAAE,GAAG;AAE5C,YAAM,KAAK,WAAW;AACtB,YAAM,SACJ,SAAS,eAAe,EAAE,KAAK,SAAS,cAAc,OAAO;AAC/D,aAAO,KAAK;AACZ,YAAM,QAAQ,MAAM,KAAK,gBAAgB,EACtC,OAAO,CAAC,KAAKC,SAAQ,MAAM,YAAYA,IAAG,OAAO,EAAE,EACnD,MAAM,GAAG,EAAE;AAEd,aAAO,cAAc;AAAA,KACpB,aAAa,QAAQ,KAAK;AAAA;AAAA;AAAA,KAIxB,QAAQ,UAAU,EAAE,EACpB,WAAW,QAAQ,IAAI;AACjB,eAAA,KAAK,YAAY,MAAM;AAAA,IACvB,WAAA,KAAK,cAAc,mBAAmB,GAAG;AAC5C,YAAA,MAAM,QAAO,gBAAK,UAAL,mBAAY,IAAI,MAAM,WAAtB,mBAA+B,EAAE;AACpD,UAAI,MAAM,GAAG;AAAG;AAGd,UAAA,CAAC,OACD,SAAS;AAAA,QACP,oBAAoB,aAAa,GAAG,QAAQ;AAAA,MAAA,GAE9C;AACA;AAAA,MACF;AAGA,mBAAa,MAAM,QAAQ,QAAQ,EAAE,GAAG;AAExC,YAAM,KAAK,WAAW;AACtB,YAAM,SACJ,SAAS,eAAe,EAAE,KAAK,SAAS,cAAc,OAAO;AAC/D,aAAO,KAAK;AACZ,YAAM,QAAQ,MAAM,KAAK,YAAY,EAClC,OAAO,CAAC,KAAKA,SAAQ,MAAM,YAAYA,IAAG,OAAO,EAAE,EACnD,MAAM,GAAG,EAAE;AAEd,aAAO,cAAc;AAAA,KACpB,aAAa,QAAQ,KAAK;AAAA;AAAA;AAAA,KAIxB,QAAQ,UAAU,EAAE,EACpB,WAAW,QAAQ,IAAI;AACjB,eAAA,KAAK,YAAY,MAAM;AAAA,IAClC;AAAA,EACF;AAGA,QAAM,yCAAyB;AAC/B,QAAM,WAAW;AAAA,IACf,MAAM,MAAM;;AACN,WAAA,UAAK,YAAL,8BAAe,oBAAoB;AACrC;AACM,cAAA,kBAAkB,eAAe,SAAS;AAChD,wBAAgB,QAAQ,MAAM;AAAA,UAC5B,WAAW;AAAA,QAAA,CACZ;AACkB,2BAAA,IAAI,MAAM,eAAe;AAAA,MAC9C;AAAA,IACF;AAAA,IACA,QAAQ,MAAM;;AACR,UAAA,SAAQ,UAAK,YAAL,8BAAe;AAC3B,UAAI,OAAO;AACT;AACmB,iCAAA,IAAI,IAAI,MAAR,mBAAW;AAC9B,2BAAmB,OAAO,IAAI;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AACA,QAAM,oBAAoB,eAAe,QAAQ;AAKjD,MAAI,YAAY,cAAc;AAC9B,MAAI,kBAAkB,cAAc,YAAY,MAAM;AAAA,EAAC;AACvD,MAAI,eAAoC;AACxC,QAAM,eAAe,CAAC,WAAA;;AAEpB;AAAA;AAAA,SAAC,kBAAO,iBAAP,gCAAsB,kCAAtB,mBAAqD,SAAS;AAAA;AAAA;AAEjE,QAAM,oBAAoB,IAAI,iBAAiB,CAAC,cAAc;AAC5D,eAAW,YAAY,WAAW;AAC1B,YAAA,UAAU,aAAa,SAAS,MAAM;AAC5C,UAAI,iBAAiB;AAAS;AACf,qBAAA;AAEf,UAAI,SAAS;AACX,iBAAS,cAAc;AAAA,MAAA,OAClB;AACI;MACX;AAAA,IACF;AAAA,EACF,CAAC;AACD,WAAS,eAAe;AAChB,UAAA,YAAY,SAAS,cAAc,cAAc;AACvD,UAAM,OAAO,uCAAW,cAAc,QAAQ,WAAW;AACnD,UAAA,OAAO,6BAAM,cAAc;AAC1B,WAAA,EAAE,MAAM,MAAM;EACvB;AACA,MAAI,WAAW;AACf,WAAS,QAAQ;;AACf,UAAM,MAAM;AAEV,QAAA,CAAC,SAAS,UAAS,SAAI,cAAJ,mBAAe,UAAU,KAC5C,CAAC,IAAI,QACL,cAAc;AAEd;AACS,eAAA;AACX,kBAAc,OAAO;AACrB,kBAAc,cAAc,QAAQ;AAClB,sBAAA,gBAAgB,IAAI,MAAM,MAAM;AAChC,sBAAA,QAAQ,IAAI,MAAM;AAAA,MAClC,YAAY;AAAA,MACZ,iBAAiB,CAAC,4BAA4B;AAAA,IAAA,CAC/C;AACD,aAAS,GAAG;AAAA,EACd;AACA,WAAS,UAAU;AACD;AAChB,sBAAkB,WAAW;AAC7B,kBAAc,OAAO;AACrB,kBAAc,cAAc,QAAQ;AAAA,EACtC;AACA,WAAS,SAAS;AACR;AACM,kBAAA,WAAW,YAAY,OAAO,GAAI;AAAA,EAClD;AAMA,WAAS,eAAe,QAAyB;AACxC,WAAA,IAAI,iBAAiB,CAAC,cAAc;AAC/B,gBAAA,QAAQ,CAAC,aAAa;AAC9B,iBAAS,WAAW,QAAQ,CAAC,SAAc,OAAO,MAAM,IAAI,CAAC;AAC7D,iBAAS,aAAa,QAAQ,CAAC,SAAc,OAAO,QAAQ,IAAI,CAAC;AAAA,MAAA,CAClE;AAAA,IAAA,CACF;AAAA,EACH;AAKA,MAAI,OAAO;AACX,QAAM,iBAAiB,MAAM;AACrB,UAAA,SAAS,SAAS,cAAc,iBAAiB;AACvD,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AACA,UAAM,wBAAwB,SAAS;AAAA,MACrC;AAAA,IAAA;AAEE,QAAA,QAAQ,CAAC,uBAAuB;AAClC;AAAA,IACF;AACO,WAAA;AACP,kBAAc,sBAAsB;AACpC;AACA,aAAS,MAAM,MAAM;AACrB,sBAAkB,QAAQ,uBAAuB;AAAA,MAC/C,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV;AAAA,EACH;AACA,MAAI,yBAAyB,YAAY,gBAAgB,GAAI;AAC7D;AAEA,QAAM,UAAU,WAAW,MAAM;AAC/B,iBAAa,OAAO;AACpB,QAAI,CAAC,UAAU;AACb,oBAAc,cAAc,QAAQ;AAAA,IACtC;AAAA,EACF,GAAG,MAAO,KAAK,CAAC;AAEhB,gBAAc,UAAU,MAAM;AACpB;AACC;AACT,uBAAmB,MAAM;AACzB,sBAAkB,WAAW;AAC7B,qBAAiB,MAAM;AACvB,iBAAa,MAAM;AAAA,EACrB;;"}