{"version":3,"file":"workbench.js","sources":["../src/workbench/keys.ts","../src/workbench/shared.ts","../src/workbench/lifecycle.ts","../src/workbench/regexToDomToCss.ts","../src/workbench/syntax.ts","../src/workbench/utils.ts","../src/workbench/highlight.ts","../src/workbench/index.ts"],"sourcesContent":["export const extensionId = 'kauderk.concise-syntax'\r\nexport const windowId = 'window.' + extensionId\r\n// exploit the fact that vscode renders data to the dom, could be any other attribute\r\nexport const bridgeBetweenVscodeExtension = 'aria-label'\r\nexport const customCSS = `\r\n\t.view-lines {\r\n\t\t--r: transparent;\r\n\t}\r\n\t.view-lines:has(.dummy:hover) {\r\n\t\t--r: red;\r\n\t}\r\n\t.dummy {\r\n\t\tcolor: var(--r);\r\n\t}\r\n\t`\r\n\r\nexport const editorSelector = '.editor-instance'\r\nexport const idSelector = '[data-mode-id=\"typescriptreact\"]'\r\nexport const linesSelector =\r\n  idSelector + ` .view-lines.monaco-mouse-cursor-text`\r\nexport const overlaySelector = '.view-overlays'\r\nexport const highlightSelector = idSelector + ` ` + overlaySelector\r\nexport const languages = ['typescriptreact', 'javascriptreact']\r\n","import { windowId } from './keys'\r\n\r\nexport const stylesContainer =\r\n  document.getElementById(windowId) ?? document.createElement('div')\r\nstylesContainer.id = windowId\r\ndocument.body.appendChild(stylesContainer)\r\n\r\nexport function createStyles(name: string) {\r\n  const id = windowId + '.' + name\r\n  const style =\r\n    stylesContainer.querySelector(`[id=\"${id}\"]`) ??\r\n    document.createElement('style')\r\n  style.id = id\r\n  stylesContainer.appendChild(style)\r\n\r\n  return {\r\n    element: style,\r\n    styleIt: (text: string) => styleIt(style, text),\r\n    dispose() {\r\n      style.textContent = ''\r\n    },\r\n  }\r\n}\r\n\r\nexport function styleIt(style: Element, text: string) {\r\n  return (style.textContent = text\r\n    .replace(/\\r|\\n/g, '')\r\n    .replaceAll(/\\t+/g, '\\n'))\r\n}\r\n\r\nexport type MutationOptions<T> = {\r\n  added(node: HTMLElement): void | (() => void)\r\n  removed(node: HTMLElement): void\r\n  options: MutationObserverInit\r\n}\r\nexport function createMutation<M>(option: MutationOptions<M>) {\r\n  const trackNodes = new Map<HTMLElement, void | (() => void)>()\r\n  const nodes = () => Array.from(trackNodes.keys())\r\n\r\n  // https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\r\n\r\n  function add(node: any) {\r\n    trackNodes.set(node, option.added(node))\r\n  }\r\n  function remove(node: any) {\r\n    if (nodes().includes(node)) {\r\n      trackNodes.get(node)?.()\r\n      trackNodes.delete(node)\r\n      option.removed?.(node)\r\n    }\r\n  }\r\n\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      mutation.addedNodes.forEach(add)\r\n      mutation.removedNodes.forEach(remove)\r\n    })\r\n  })\r\n\r\n  return {\r\n    get targets() {\r\n      return nodes()\r\n    },\r\n    track(target: Element) {\r\n      add(target)\r\n      return observer.observe(target, option.options)\r\n    },\r\n    untrack(target: Element) {\r\n      remove(target)\r\n      observer.disconnect()\r\n      nodes().forEach((_target) => {\r\n        observer.observe(_target, option.options)\r\n      })\r\n    },\r\n    clear() {\r\n      trackNodes.forEach((_, node) => remove(node))\r\n      trackNodes.clear()\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\n\r\nexport function createSimpleMutation(options: {\r\n  added(node: HTMLElement): void\r\n  removed(node: HTMLElement): void\r\n  options: MutationObserverInit\r\n}) {\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      mutation.addedNodes.forEach((node) => options.added(node as any))\r\n      mutation.removedNodes.forEach((node) => options.added(node as any))\r\n    })\r\n  })\r\n\r\n  return {\r\n    track(target: HTMLElement) {\r\n      options.added(target)\r\n      observer.observe(target, options.options)\r\n    },\r\n    untrack(target: HTMLElement) {\r\n      options.removed(target)\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\n\r\ntype D = string | undefined\r\ntype Bridge = {\r\n  target: HTMLElement\r\n  attribute: D\r\n}\r\nexport function createAttributeMutation(props: {\r\n  watchAttribute: string\r\n  activate: (payload: D) => void\r\n  inactive: (payload: D) => void\r\n}) {\r\n  let previousData: D\r\n  const bridgeAttribute = (target: any): D =>\r\n    target?.getAttribute?.(props.watchAttribute)\r\n\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      const newData = bridgeAttribute(mutation.target)\r\n      if (previousData === newData) return\r\n      previousData = newData\r\n\r\n      if (newData) {\r\n        props.activate(newData)\r\n      } else {\r\n        props.inactive(newData)\r\n      }\r\n    }\r\n  })\r\n\r\n  return {\r\n    activate(target: HTMLElement) {\r\n      previousData = bridgeAttribute(target)\r\n\r\n      props.activate(previousData)\r\n      observer.observe(target, {\r\n        attributes: true,\r\n        attributeFilter: [props.watchAttribute],\r\n      })\r\n    },\r\n    dispose() {\r\n      // lol this could be a problem\r\n      props.inactive(previousData)\r\n      observer.disconnect()\r\n    },\r\n  }\r\n}\r\nexport function createAttributeArrayMutation(props: {\r\n  watchAttribute: string[]\r\n  change: (target: HTMLElement, newAttributes: D[], oldAttributes: D[]) => void\r\n}) {\r\n  const trackNodes = new Map<HTMLElement, D[]>()\r\n  const nodes = () => Array.from(trackNodes.keys())\r\n  const bridgeAttribute = (target: any): D[] =>\r\n    props.watchAttribute.map((a) => target?.getAttribute?.(a))\r\n\r\n  function change(target: HTMLElement) {\r\n    const newData = bridgeAttribute(target)\r\n    const previousData = trackNodes.get(target) ?? []\r\n    if (newData.every((d, i) => d === previousData[i])) return\r\n    const oldAttributes = [...previousData]\r\n    trackNodes.set(target, newData)\r\n\r\n    props.change(target, newData, oldAttributes)\r\n  }\r\n  function remove(target: HTMLElement) {\r\n    if (nodes().includes(target)) {\r\n      change(target)\r\n      trackNodes.delete(target)\r\n    }\r\n  }\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      change(mutation.target as HTMLElement)\r\n    }\r\n  })\r\n  const options = {\r\n    attributes: true,\r\n    attributeFilter: props.watchAttribute,\r\n  }\r\n  return {\r\n    get targets() {\r\n      return nodes()\r\n    },\r\n    track(target: HTMLElement) {\r\n      trackNodes.set(target, [])\r\n      change(target)\r\n\r\n      observer.observe(target, options)\r\n    },\r\n    untrack(target: HTMLElement) {\r\n      remove(target)\r\n      observer.disconnect()\r\n      nodes().forEach((target) => {\r\n        observer.observe(target, options)\r\n      })\r\n    },\r\n    clear() {\r\n      nodes().forEach(remove)\r\n    },\r\n  }\r\n}\r\n\r\n// TODO: test if this is more \"performant\" or just mental gymnastics\r\nexport function watchForRemoval(targetElement: Element, callback: Function) {\r\n  let done = false\r\n  let stack: Node[] = []\r\n  const rootObserver = new MutationObserver((mutationsList) => {\r\n    mutationsList.forEach((mutation) => {\r\n      if (\r\n        done ||\r\n        !stack.includes(mutation.target) ||\r\n        !mutation.removedNodes.length\r\n      )\r\n        return\r\n\r\n      const nodes = Array.from(mutation.removedNodes)\r\n      // console.log(mutation.target)\r\n\r\n      // direct match\r\n      if (\r\n        nodes.indexOf(targetElement) > -1 ||\r\n        // parent match\r\n        nodes.some((parent) => parent.contains(targetElement))\r\n      ) {\r\n        console.log('removed', targetElement, stack)\r\n        dispose()\r\n        callback()\r\n        return\r\n      }\r\n    })\r\n  })\r\n\r\n  function REC_ObserverAncestors(element: Element) {\r\n    if (!element.parentElement || element.parentElement === document.body) {\r\n      return\r\n    }\r\n    stack.push(element.parentElement)\r\n    rootObserver.observe(element.parentElement, { childList: true })\r\n    REC_ObserverAncestors(element.parentElement)\r\n  }\r\n\r\n  // Start observing ancestor hierarchy\r\n  REC_ObserverAncestors(targetElement)\r\n\r\n  function dispose() {\r\n    done = true\r\n    stack = []\r\n    rootObserver.takeRecords()\r\n    rootObserver.disconnect()\r\n  }\r\n  return dispose\r\n}\r\n","import { watchForRemoval } from './shared'\r\n\r\nexport type LifecycleProps<T> = {\r\n  activate(dom: T): void | (() => void)\r\n  dom(): T & { check(): boolean; watchForRemoval: HTMLElement }\r\n  dispose?: () => void\r\n}\r\n\r\n/**\r\n * @description The **activate** function is called when the dom **check** passes. Then if the **item** is removed from the dom, the **dispose** function is called.\r\n *\r\n * Then it will try to **reload** the lifecycle.\r\n */\r\nexport function lifecycle<T>(props: LifecycleProps<T>) {\r\n  let running = false\r\n  let anyUsage = false\r\n  let interval: NodeJS.Timeout\r\n  let disposeObserver = () => {}\r\n  let disposeActivate: Function | void\r\n\r\n  function patch() {\r\n    const dom = props.dom()\r\n    if (running || !dom.check()) return\r\n    anyUsage = true\r\n    running = true\r\n    clearInterval(interval)\r\n    disposeObserver = watchForRemoval(dom.watchForRemoval, reload)\r\n    disposeActivate = props.activate(dom)\r\n  }\r\n  function dispose() {\r\n    disposeActivate?.()\r\n    disposeObserver()\r\n    props.dispose?.()\r\n    running = false\r\n    clearInterval(interval)\r\n  }\r\n  function reload() {\r\n    dispose()\r\n    interval = setInterval(patch, 5000)\r\n  }\r\n\r\n  let exhaust: any\r\n\r\n  return {\r\n    activate() {\r\n      reload()\r\n      exhaust = setTimeout(() => {\r\n        clearTimeout(exhaust)\r\n        if (!anyUsage) {\r\n          clearInterval(interval)\r\n        }\r\n      }, 1000 * 60 * 2)\r\n    },\r\n    dispose() {\r\n      dispose()\r\n      clearTimeout(exhaust)\r\n      clearInterval(interval)\r\n    },\r\n  }\r\n}\r\n","import { linesSelector, customCSS } from './keys'\r\n\r\nexport function regexToDomToCss() {\r\n  const lineEditor = document.querySelector(linesSelector)\r\n  if (!lineEditor) {\r\n    console.log('Fail to find Editor with selector:', linesSelector)\r\n    return ''\r\n  }\r\n  type Flag = {\r\n    hide: string\r\n    hover: string\r\n  }\r\n  type Flags = null | Flag\r\n  const flags = {\r\n    jsxTag: null as Flags,\r\n    jsxTernaryBrace: null as Flags,\r\n    jsxTernaryOtherwise: null as Flags,\r\n    vsCodeHiddenTokens: null as Flags,\r\n    beginQuote: null as Flags,\r\n    endQuote: null as Flags,\r\n  }\r\n  const customFlags = {\r\n    singleQuotes: null as string | null,\r\n  }\r\n\r\n  const root = `${linesSelector}>div>span`\r\n  const lines = Array.from(lineEditor.querySelectorAll('div>span'))\r\n\r\n  function toFlatClassList<T extends { join: (to?: string) => string }>(\r\n    Array: T[]\r\n  ) {\r\n    return Array.reduce(\r\n      (acc, val) => acc.concat(val.join('.')),\r\n      <string[]>[]\r\n    ) as string[] // FIXME: avoid casting\r\n  }\r\n  function SliceClassList(line: Element, slice: number) {\r\n    const sliced = Array.from(line.children)\r\n      .slice(slice)\r\n      .map((c) => Array.from(c.classList))\r\n    return Object.assign(sliced, { okLength: sliced.length == slice * -1 })\r\n  }\r\n\r\n  parser: for (const line of lines) {\r\n    const text = line.textContent\r\n    if (!text) continue\r\n    let anyFlag = false\r\n\r\n    if (text.match('.+(</(?<jsxTag>.*)?>)$')?.groups?.jsxTag) {\r\n      if (flags.jsxTag || flags.vsCodeHiddenTokens) continue\r\n\r\n      const closing = SliceClassList(line, -3)\r\n      if (!closing.okLength) continue\r\n      const [angleBracket, tag, right] = closing.flat()\r\n      if (angleBracket !== right) continue\r\n\r\n      flags.jsxTag = {\r\n        // find the last </tag> and hide it \"tag\" which is the second to last child\r\n        hide: `:has(:nth-last-child(3).${angleBracket}+.${tag}+.${angleBracket}) :nth-last-child(2)`,\r\n        hover: `.${angleBracket}+.${tag}`,\r\n      }\r\n      flags.vsCodeHiddenTokens = {\r\n        // this is the most common case, you could derive it from other flags\r\n        hide: `>.${angleBracket}`,\r\n        hover: `.${angleBracket}`,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (\r\n      text.match(/(\\{).+\\?.+?(?<ternaryBrace>\\()$/)?.groups?.ternaryBrace\r\n    ) {\r\n      if (flags.jsxTernaryBrace) continue\r\n\r\n      const closing = SliceClassList(line, -4)\r\n      if (!closing.okLength) continue\r\n      // prettier-ignore\r\n      const [blank, questionMark, blank2, openBrace] = toFlatClassList(closing)\r\n      const selector = `.${blank}+.${questionMark}+.${blank}+.${openBrace}:last-child`\r\n\r\n      flags.jsxTernaryBrace = {\r\n        // find the last open brace in \" ? (\"\r\n        hide: `:has(${selector}) :last-child`,\r\n        hover: selector,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (\r\n      text.match(/(?<ternaryOtherwise>\\).+?:.+\\})/)?.groups?.ternaryOtherwise\r\n    ) {\r\n      if (flags.jsxTernaryOtherwise) continue\r\n\r\n      const closing = SliceClassList(line, -7)\r\n      if (!closing.okLength) continue\r\n      // prettier-ignore\r\n      const [blank0, closeBrace, blank, colon, blank2, nullIsh,closeBracket] = toFlatClassList(closing)\r\n      const selector = `.${blank0}+.${closeBrace}+.${blank}+.${colon}+.${blank2}+.${nullIsh}+.${closeBracket}:last-child`\r\n\r\n      flags.jsxTernaryOtherwise = {\r\n        // find \") : null}\" then hide it all\r\n        hide: `:has(${selector}) *`,\r\n        hover: selector,\r\n      }\r\n\r\n      anyFlag = true\r\n    } else if (text.match(/(?<singleQuotes>\"\"|''|``)/)?.groups?.singleQuotes) {\r\n      // FIXME: what if there are no empty quotes/strings?\r\n      if (customFlags.singleQuotes) continue\r\n\r\n      const array = Array.from(line.children)\r\n      const quote = /\"|'|`/\r\n      singleQuotes: for (let i = 0; i < array.length; i++) {\r\n        const child = array[i]\r\n\r\n        const current = child.textContent?.match(quote)\r\n        const next = array[i + 1]?.textContent?.match(quote)\r\n        if (current?.[0].length == 1 && current[0] === next?.[0]) {\r\n          const beginQuote = Array.from(child.classList).join('.')\r\n          const endQuote = Array.from(array[i + 1].classList).join('.') // wow, why isn't typescript freaking out?\r\n\r\n          // Find \"\" or '' or `` and show them\r\n          customFlags.singleQuotes = `.${beginQuote}:has(+.${endQuote}), .${beginQuote}+.${endQuote} {\r\n\t\t\t\t\t\t\tcolor: gray;\r\n\t\t\t\t\t\t}`\r\n          flags.beginQuote = {\r\n            // this is the most common case, you could derive it from other flags\r\n            hide: `>.${beginQuote}`,\r\n            hover: `.${beginQuote}`,\r\n          }\r\n          flags.endQuote = {\r\n            // this is the most common case, you could derive it from other flags\r\n            hide: `>.${endQuote}`,\r\n            hover: `.${endQuote}`,\r\n          }\r\n\r\n          anyFlag = true\r\n          break singleQuotes\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      anyFlag &&\r\n      Object.values(flags).every((f) => !!f) &&\r\n      Object.values(customFlags).every((f) => !!f)\r\n    ) {\r\n      break parser\r\n    }\r\n  }\r\n  // you know the concise syntax hover feature will work because you found the common case\r\n  const validFlags = Object.values(flags).filter(\r\n    (f) => f?.hide && f.hover\r\n  ) as Flag[] // FIXME: avoid casting\r\n  if (validFlags.length && flags.vsCodeHiddenTokens?.hover) {\r\n    const toHover = validFlags.map((f) => f.hover).join(',')\r\n    const toHidden = validFlags.map((f) => root + f.hide).join(',')\r\n    const toCustom = Object.values(customFlags)\r\n      .filter((f) => !!f)\r\n      .join('\\n')\r\n    return `\r\n\t\t\t.view-lines {\r\n\t\t\t\t--r: transparent;\r\n\t\t\t}\r\n\t\t\t.view-lines > div:hover {\r\n\t\t\t\t--r: yellow;\r\n\t\t\t}\r\n\t\t\t.view-lines:has(:is(${toHover}):hover) {\r\n\t\t\t\t--r: red;\r\n\t\t\t}\r\n\t\t\t${toHidden} {\r\n\t\t\t\tcolor: var(--r);\r\n\t\t\t}\r\n\t\t\t${toCustom}\r\n\t\t\t`\r\n      .replace(/\\r|\\n/g, '')\r\n      .replaceAll(/\\t+/g, '\\n')\r\n  }\r\n  // FIXME: honestly, the user should get a warning: the extension can't find the common case\r\n  return ''\r\n}\r\n","import { bridgeBetweenVscodeExtension, extensionId } from './keys'\r\nimport { lifecycle } from './lifecycle'\r\nimport { regexToDomToCss } from './regexToDomToCss'\r\nimport { createAttributeMutation, createStyles } from './shared'\r\n\r\nfunction domExtension() {\r\n  const statusBar = document.querySelector('.right-items') as HTMLElement\r\n  const item = statusBar?.querySelector(`[id=\"${extensionId}\"]`) as HTMLElement\r\n  const icon = item?.querySelector('.codicon') as HTMLElement\r\n  return { icon, item, statusBar }\r\n}\r\nconst bridgeAttribute = (target: any) =>\r\n  // You could pass stringified data\r\n  !target.getAttribute?.(bridgeBetweenVscodeExtension)?.includes('inactive')\r\n\r\n/**\r\n * @description When the vscode extension changes the \"bridge attribute\" apply custom styles\r\n *\r\n * Take a look at: regexToDomToCss.ts to see how the styles are generated\r\n */\r\nexport function createSyntaxLifecycle() {\r\n  let Extension: null | Extension\r\n  const syntaxStyle = createStyles('hide')\r\n\r\n  function activate(extension: Extension) {\r\n    Extension = extension // alright...\r\n    const on = bridgeAttribute(extension.item)\r\n\r\n    extension.icon.style.fontWeight = on ? 'bold' : 'normal'\r\n    const title = 'Concise Syntax'\r\n    extension.item.title = on ? `${title}: active` : `${title}: inactive`\r\n    syntaxStyle.styleIt(on ? regexToDomToCss() : '')\r\n  }\r\n  function inactive() {\r\n    if (!Extension) return\r\n    Extension.item.removeAttribute('title')\r\n    Extension.icon.style.removeProperty('font-weight')\r\n  }\r\n\r\n  const attributeObserver = createAttributeMutation({\r\n    watchAttribute: bridgeBetweenVscodeExtension,\r\n    activate() {\r\n      activate(domExtension())\r\n    },\r\n    inactive() {\r\n      inactive()\r\n    },\r\n  })\r\n\r\n  const cycle = lifecycle<Extension>({\r\n    dom() {\r\n      const dom = domExtension()\r\n      return {\r\n        ...dom,\r\n        watchForRemoval: dom.item,\r\n        check() {\r\n          return !!(document.contains(dom.statusBar?.parentNode) && dom.icon)\r\n        },\r\n      }\r\n    },\r\n    activate(dom) {\r\n      debugger\r\n      attributeObserver.activate(dom.item)\r\n    },\r\n    dispose() {\r\n      debugger\r\n      attributeObserver.dispose()\r\n      syntaxStyle.dispose()\r\n    },\r\n  })\r\n\r\n  return cycle\r\n}\r\ntype Extension = ReturnType<typeof domExtension>\r\n","import { editorSelector } from './keys'\r\nimport { stylesContainer } from './shared'\r\n\r\nexport function queryEditors(node: HTMLElement) {\r\n  if (!node.querySelector) return []\r\n  const editors = Array.from(node.querySelectorAll(editorSelector))\r\n  if (node.matches(editorSelector)) editors.push(node)\r\n  return editors as HTMLElement[]\r\n}\r\nexport function clear(label?: string) {\r\n  stylesContainer\r\n    .querySelectorAll(label ? `[aria-label=\"${label}\"]` : '[aria-label]')\r\n    .forEach((style) => style.remove())\r\n}\r\nexport const styles = {\r\n  clear(label: string) {\r\n    clear(label)\r\n  },\r\n  clearAll() {\r\n    clear()\r\n    stylesContainer.querySelectorAll('style').forEach((style) => {\r\n      style.textContent = ''\r\n    })\r\n  },\r\n  getOrCreateLabeledStyle(label: string) {\r\n    let style = stylesContainer.querySelector(\r\n      `[aria-label=\"${label}\"]`\r\n    ) as HTMLElement\r\n    if (!style || !stylesContainer.contains(style)) {\r\n      console.log('creating style', label)\r\n      style = document.createElement('style')\r\n      style.setAttribute('aria-label', label)\r\n      stylesContainer.appendChild(style)\r\n    }\r\n    return style\r\n  },\r\n}\r\n\r\nexport type Selected = {\r\n  node: HTMLElement\r\n  selector: string\r\n  add: boolean\r\n  set: Set<number>\r\n  color: string\r\n}\r\nexport function tryGetAttribute(\r\n  line: HTMLElement,\r\n  attribute: string\r\n): string | undefined {\r\n  // @ts-ignore\r\n  return (line.editor =\r\n    line.closest(`[${attribute}]`)?.getAttribute(attribute) ??\r\n    // @ts-ignore\r\n    line.editor)\r\n}\r\n","import {\r\n  highlightSelector,\r\n  idSelector,\r\n  linesSelector,\r\n  overlaySelector,\r\n} from './keys'\r\nimport { lifecycle } from './lifecycle'\r\nimport {\r\n  createAttributeArrayMutation,\r\n  createMutation,\r\n  createSimpleMutation,\r\n  styleIt,\r\n} from './shared'\r\nimport { Selected, tryGetAttribute, styles, queryEditors } from './utils'\r\n\r\n/**\r\n * @description Change color of highlighted or selected lines\r\n *\r\n * Read this function from bottom to top\r\n *\r\n * At the bottom is the lifecycle function\r\n *\r\n * At the top is main function: createHighlight\r\n */\r\nexport function createHighlightLifeCycle() {\r\n  function createHighlight({ node, selector, add, set, color }: Selected) {\r\n    if (!node.querySelector(selector)) return\r\n    const label = tryGetAttribute(node, 'aria-label')\r\n    const top = Number(node.style?.top.match(/\\d+/)?.[0])\r\n    if (\r\n      !label ||\r\n      isNaN(top) ||\r\n      set.has(top) === add ||\r\n      (!add &&\r\n        // most likely a node previous the lifecycle\r\n        // FIXME: figure out how to overcome vscode rapid dom swap at viewLayers.ts _finishRenderingInvalidLines\r\n        document.querySelector(\r\n          highlightSelector + `>[style*=\"${top}\"]>` + selector\r\n        ))\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // funny code\r\n    set[add ? 'add' : 'delete'](top)\r\n\r\n    const lines = Array.from(set)\r\n      .reduce((acc, top) => acc + `[style*=\"${top}\"],`, '')\r\n      .slice(0, -1)\r\n\r\n    styleIt(\r\n      styles.getOrCreateLabeledStyle(label + selector),\r\n      `[aria-label=\"${label}\"]${linesSelector} :is(${lines}) {\r\n\t\t\t\t\t--r: ${color};\r\n\t\t\t}`\r\n    )\r\n\r\n    return true\r\n  }\r\n\r\n  let selectedLines = new Set<number>()\r\n  const selectedSelector = '.selected-text'\r\n\r\n  let currentLines = new Set<number>()\r\n  const currentLineSelector = '.current-line'\r\n\r\n  function highlightStyles(node: HTMLElement, add: boolean) {\r\n    createHighlight({\r\n      node,\r\n      selector: selectedSelector,\r\n      add,\r\n      set: selectedLines,\r\n      color: 'orange',\r\n    }) ||\r\n      createHighlight({\r\n        node,\r\n        selector: currentLineSelector,\r\n        add,\r\n        set: currentLines,\r\n        color: 'brown',\r\n      })\r\n  }\r\n\r\n  const OverlayLineTracker = createMutation({\r\n    options: {\r\n      childList: true,\r\n    },\r\n    added(node) {\r\n      highlightStyles(node, true)\r\n    },\r\n    removed(node) {\r\n      highlightStyles(node, false)\r\n    },\r\n  })\r\n\r\n  const EditorLanguageTracker = createAttributeArrayMutation({\r\n    watchAttribute: ['data-mode-id', 'aria-label'],\r\n    change(editor: HTMLElement, [language, label], [, oldLabel]) {\r\n      if (!language || !label) return // hydrating...\r\n\r\n      const overlay = editor.querySelector(overlaySelector)\r\n      overlay?.setAttribute('aria-label', label) // TODO: find a better way to pass this data, it is this to prevent virtual dom shenanigans\r\n      if (!overlay) {\r\n        return console.error('no overlays')\r\n      }\r\n      OverlayLineTracker.untrack(overlay)\r\n\r\n      if (label != oldLabel || !label.match(/(\\.tsx$)|(\\.tsx, E)/)) {\r\n        if (!oldLabel) {\r\n          console.error('no old label', arguments)\r\n          return\r\n        }\r\n        styles.clear(oldLabel)\r\n        return\r\n      }\r\n      if (language === 'typescriptreact') {\r\n        console.log('overlays', arguments)\r\n        OverlayLineTracker.track(overlay) // FIXME: the target shouldn't be part of the tracker internal state\r\n      }\r\n    },\r\n  })\r\n\r\n  const RootContainerTracker = createSimpleMutation({\r\n    options: {\r\n      childList: true,\r\n      subtree: true,\r\n    },\r\n    added(node) {\r\n      queryEditors(node).forEach((editor) => {\r\n        if (!EditorLanguageTracker.targets.includes(editor)) {\r\n          debugger\r\n          EditorLanguageTracker.track(editor)\r\n        }\r\n      })\r\n    },\r\n    removed(node) {\r\n      queryEditors(node).forEach((editor) => {\r\n        if (EditorLanguageTracker.targets.includes(editor)) {\r\n          debugger\r\n          EditorLanguageTracker.untrack(editor)\r\n        }\r\n      })\r\n    },\r\n  })\r\n\r\n  const cycle = lifecycle({\r\n    dom() {\r\n      const root = document.querySelector(\r\n        '#workbench\\\\.parts\\\\.editor > div.content > div > div > div > div > div.monaco-scrollable-element > div.split-view-container'\r\n      ) as HTMLElement\r\n      const editor = root?.querySelector(idSelector) as HTMLElement\r\n      const overlays = editor?.querySelector(highlightSelector)\r\n        ?.parentElement as HTMLElement\r\n      return {\r\n        check() {\r\n          return !!(root && editor && overlays)\r\n        },\r\n        watchForRemoval: root,\r\n      }\r\n    },\r\n    activate(dom) {\r\n      debugger\r\n      RootContainerTracker.track(dom.watchForRemoval)\r\n      return () => RootContainerTracker.untrack(dom.watchForRemoval)\r\n    },\r\n    dispose() {\r\n      EditorLanguageTracker.clear()\r\n      OverlayLineTracker.clear()\r\n      selectedLines.clear()\r\n      currentLines.clear()\r\n      styles.clearAll()\r\n    },\r\n  })\r\n\r\n  return cycle\r\n}\r\n","import { createSyntaxLifecycle } from './syntax'\r\nimport { createHighlightLifeCycle } from './highlight'\r\nimport { extensionId } from './keys'\r\n\r\nconst syntax = createSyntaxLifecycle()\r\nconst highlight = createHighlightLifeCycle()\r\n\r\nconst conciseSyntax = {\r\n  activate() {\r\n    syntax.activate()\r\n    highlight.activate()\r\n  },\r\n  dispose() {\r\n    syntax.dispose()\r\n    highlight.dispose()\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nif (window.conciseSyntax) {\r\n  // @ts-ignore\r\n  window.conciseSyntax.dispose()\r\n}\r\n// @ts-ignore\r\nwindow.conciseSyntax = conciseSyntax\r\nconciseSyntax.activate()\r\n\r\nconsole.log(extensionId, conciseSyntax)\r\n"],"names":["bridgeAttribute","target","Array","top"],"mappings":"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"}